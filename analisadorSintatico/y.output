

Terminals which are not used:

   '+'
   '-'
   '*'
   '/'
   '='


Conflict in state 94 between rule 74 and token OR resolved as reduce.
Conflict in state 94 between rule 74 and token AND resolved as reduce.
Conflict in state 94 between rule 74 and token LE resolved as reduce.
Conflict in state 94 between rule 74 and token GT resolved as reduce.
Conflict in state 94 between rule 74 and token LT resolved as reduce.
Conflict in state 94 between rule 74 and token GE resolved as reduce.
Conflict in state 94 between rule 74 and token NE resolved as reduce.
Conflict in state 94 between rule 74 and token PLUS resolved as shift.
Conflict in state 94 between rule 74 and token MINUS resolved as shift.
Conflict in state 94 between rule 74 and token MULT resolved as shift.
Conflict in state 94 between rule 74 and token DIV resolved as shift.
Conflict in state 94 between rule 74 and token EXP resolved as shift.
Conflict in state 95 between rule 85 and token OR resolved as reduce.
Conflict in state 95 between rule 85 and token AND resolved as reduce.
Conflict in state 95 between rule 85 and token LE resolved as reduce.
Conflict in state 95 between rule 85 and token GT resolved as reduce.
Conflict in state 95 between rule 85 and token LT resolved as reduce.
Conflict in state 95 between rule 85 and token GE resolved as reduce.
Conflict in state 95 between rule 85 and token NE resolved as reduce.
Conflict in state 95 between rule 85 and token PLUS resolved as reduce.
Conflict in state 95 between rule 85 and token MINUS resolved as reduce.
Conflict in state 95 between rule 85 and token MULT resolved as reduce.
Conflict in state 95 between rule 85 and token DIV resolved as reduce.
Conflict in state 95 between rule 85 and token EXP resolved as reduce.
Conflict in state 125 between rule 79 and token OR resolved as reduce.
Conflict in state 125 between rule 79 and token AND resolved as reduce.
Conflict in state 125 between rule 79 and token LE resolved as reduce.
Conflict in state 125 between rule 79 and token GT resolved as shift.
Conflict in state 125 between rule 79 and token LT resolved as shift.
Conflict in state 125 between rule 79 and token GE resolved as shift.
Conflict in state 125 between rule 79 and token NE resolved as shift.
Conflict in state 125 between rule 79 and token PLUS resolved as shift.
Conflict in state 125 between rule 79 and token MINUS resolved as shift.
Conflict in state 125 between rule 79 and token MULT resolved as shift.
Conflict in state 125 between rule 79 and token DIV resolved as shift.
Conflict in state 125 between rule 79 and token EXP resolved as shift.
Conflict in state 126 between rule 77 and token OR resolved as reduce.
Conflict in state 126 between rule 77 and token AND resolved as reduce.
Conflict in state 126 between rule 77 and token LE resolved as reduce.
Conflict in state 126 between rule 77 and token GT resolved as reduce.
Conflict in state 126 between rule 77 and token LT resolved as shift.
Conflict in state 126 between rule 77 and token GE resolved as shift.
Conflict in state 126 between rule 77 and token NE resolved as shift.
Conflict in state 126 between rule 77 and token PLUS resolved as shift.
Conflict in state 126 between rule 77 and token MINUS resolved as shift.
Conflict in state 126 between rule 77 and token MULT resolved as shift.
Conflict in state 126 between rule 77 and token DIV resolved as shift.
Conflict in state 126 between rule 77 and token EXP resolved as shift.
Conflict in state 127 between rule 76 and token OR resolved as reduce.
Conflict in state 127 between rule 76 and token AND resolved as reduce.
Conflict in state 127 between rule 76 and token LE resolved as reduce.
Conflict in state 127 between rule 76 and token GT resolved as reduce.
Conflict in state 127 between rule 76 and token LT resolved as reduce.
Conflict in state 127 between rule 76 and token GE resolved as shift.
Conflict in state 127 between rule 76 and token NE resolved as shift.
Conflict in state 127 between rule 76 and token PLUS resolved as shift.
Conflict in state 127 between rule 76 and token MINUS resolved as shift.
Conflict in state 127 between rule 76 and token MULT resolved as shift.
Conflict in state 127 between rule 76 and token DIV resolved as shift.
Conflict in state 127 between rule 76 and token EXP resolved as shift.
Conflict in state 128 between rule 78 and token OR resolved as reduce.
Conflict in state 128 between rule 78 and token AND resolved as reduce.
Conflict in state 128 between rule 78 and token LE resolved as reduce.
Conflict in state 128 between rule 78 and token GT resolved as reduce.
Conflict in state 128 between rule 78 and token LT resolved as reduce.
Conflict in state 128 between rule 78 and token GE resolved as reduce.
Conflict in state 128 between rule 78 and token NE resolved as shift.
Conflict in state 128 between rule 78 and token PLUS resolved as shift.
Conflict in state 128 between rule 78 and token MINUS resolved as shift.
Conflict in state 128 between rule 78 and token MULT resolved as shift.
Conflict in state 128 between rule 78 and token DIV resolved as shift.
Conflict in state 128 between rule 78 and token EXP resolved as shift.
Conflict in state 129 between rule 75 and token OR resolved as reduce.
Conflict in state 129 between rule 75 and token AND resolved as reduce.
Conflict in state 129 between rule 75 and token LE resolved as reduce.
Conflict in state 129 between rule 75 and token GT resolved as reduce.
Conflict in state 129 between rule 75 and token LT resolved as reduce.
Conflict in state 129 between rule 75 and token GE resolved as reduce.
Conflict in state 129 between rule 75 and token NE resolved as reduce.
Conflict in state 129 between rule 75 and token PLUS resolved as shift.
Conflict in state 129 between rule 75 and token MINUS resolved as shift.
Conflict in state 129 between rule 75 and token MULT resolved as shift.
Conflict in state 129 between rule 75 and token DIV resolved as shift.
Conflict in state 129 between rule 75 and token EXP resolved as shift.
Conflict in state 130 between rule 80 and token OR resolved as reduce.
Conflict in state 130 between rule 80 and token AND resolved as reduce.
Conflict in state 130 between rule 80 and token LE resolved as reduce.
Conflict in state 130 between rule 80 and token GT resolved as reduce.
Conflict in state 130 between rule 80 and token LT resolved as reduce.
Conflict in state 130 between rule 80 and token GE resolved as reduce.
Conflict in state 130 between rule 80 and token NE resolved as reduce.
Conflict in state 130 between rule 80 and token PLUS resolved as reduce.
Conflict in state 130 between rule 80 and token MINUS resolved as shift.
Conflict in state 130 between rule 80 and token MULT resolved as shift.
Conflict in state 130 between rule 80 and token DIV resolved as shift.
Conflict in state 130 between rule 80 and token EXP resolved as shift.
Conflict in state 131 between rule 81 and token OR resolved as reduce.
Conflict in state 131 between rule 81 and token AND resolved as reduce.
Conflict in state 131 between rule 81 and token LE resolved as reduce.
Conflict in state 131 between rule 81 and token GT resolved as reduce.
Conflict in state 131 between rule 81 and token LT resolved as reduce.
Conflict in state 131 between rule 81 and token GE resolved as reduce.
Conflict in state 131 between rule 81 and token NE resolved as reduce.
Conflict in state 131 between rule 81 and token PLUS resolved as reduce.
Conflict in state 131 between rule 81 and token MINUS resolved as reduce.
Conflict in state 131 between rule 81 and token MULT resolved as shift.
Conflict in state 131 between rule 81 and token DIV resolved as shift.
Conflict in state 131 between rule 81 and token EXP resolved as shift.
Conflict in state 132 between rule 82 and token OR resolved as reduce.
Conflict in state 132 between rule 82 and token AND resolved as reduce.
Conflict in state 132 between rule 82 and token LE resolved as reduce.
Conflict in state 132 between rule 82 and token GT resolved as reduce.
Conflict in state 132 between rule 82 and token LT resolved as reduce.
Conflict in state 132 between rule 82 and token GE resolved as reduce.
Conflict in state 132 between rule 82 and token NE resolved as reduce.
Conflict in state 132 between rule 82 and token PLUS resolved as reduce.
Conflict in state 132 between rule 82 and token MINUS resolved as reduce.
Conflict in state 132 between rule 82 and token MULT resolved as reduce.
Conflict in state 132 between rule 82 and token DIV resolved as shift.
Conflict in state 132 between rule 82 and token EXP resolved as shift.
Conflict in state 133 between rule 83 and token OR resolved as reduce.
Conflict in state 133 between rule 83 and token AND resolved as reduce.
Conflict in state 133 between rule 83 and token LE resolved as reduce.
Conflict in state 133 between rule 83 and token GT resolved as reduce.
Conflict in state 133 between rule 83 and token LT resolved as reduce.
Conflict in state 133 between rule 83 and token GE resolved as reduce.
Conflict in state 133 between rule 83 and token NE resolved as reduce.
Conflict in state 133 between rule 83 and token PLUS resolved as reduce.
Conflict in state 133 between rule 83 and token MINUS resolved as reduce.
Conflict in state 133 between rule 83 and token MULT resolved as reduce.
Conflict in state 133 between rule 83 and token DIV resolved as reduce.
Conflict in state 133 between rule 83 and token EXP resolved as shift.
Conflict in state 134 between rule 84 and token OR resolved as reduce.
Conflict in state 134 between rule 84 and token AND resolved as reduce.
Conflict in state 134 between rule 84 and token LE resolved as reduce.
Conflict in state 134 between rule 84 and token GT resolved as reduce.
Conflict in state 134 between rule 84 and token LT resolved as reduce.
Conflict in state 134 between rule 84 and token GE resolved as reduce.
Conflict in state 134 between rule 84 and token NE resolved as reduce.
Conflict in state 134 between rule 84 and token PLUS resolved as reduce.
Conflict in state 134 between rule 84 and token MINUS resolved as reduce.
Conflict in state 134 between rule 84 and token MULT resolved as reduce.
Conflict in state 134 between rule 84 and token DIV resolved as reduce.
Conflict in state 134 between rule 84 and token EXP resolved as shift.
Conflict in state 146 between rule 72 and token OR resolved as reduce.
Conflict in state 146 between rule 72 and token AND resolved as shift.
Conflict in state 146 between rule 72 and token LE resolved as shift.
Conflict in state 146 between rule 72 and token GT resolved as shift.
Conflict in state 146 between rule 72 and token LT resolved as shift.
Conflict in state 146 between rule 72 and token GE resolved as shift.
Conflict in state 146 between rule 72 and token NE resolved as shift.
Conflict in state 146 between rule 72 and token PLUS resolved as shift.
Conflict in state 146 between rule 72 and token MINUS resolved as shift.
Conflict in state 146 between rule 72 and token MULT resolved as shift.
Conflict in state 146 between rule 72 and token DIV resolved as shift.
Conflict in state 146 between rule 72 and token EXP resolved as shift.
Conflict in state 147 between rule 73 and token OR resolved as reduce.
Conflict in state 147 between rule 73 and token AND resolved as reduce.
Conflict in state 147 between rule 73 and token LE resolved as shift.
Conflict in state 147 between rule 73 and token GT resolved as shift.
Conflict in state 147 between rule 73 and token LT resolved as shift.
Conflict in state 147 between rule 73 and token GE resolved as shift.
Conflict in state 147 between rule 73 and token NE resolved as shift.
Conflict in state 147 between rule 73 and token PLUS resolved as shift.
Conflict in state 147 between rule 73 and token MINUS resolved as shift.
Conflict in state 147 between rule 73 and token MULT resolved as shift.
Conflict in state 147 between rule 73 and token DIV resolved as shift.
Conflict in state 147 between rule 73 and token EXP resolved as shift.

Grammar
rule 1    CODE -> program
rule 2    program -> PROGRAM M2 declaracoes M0 bloco
rule 3    bloco -> BEG lista_de_comandos M0 END
rule 4    declaracoes -> declaracoes M0 declaracao SEMICOLON
rule 5    declaracoes -> vazio
rule 6    declaracao -> decl_de_var
rule 7    declaracao -> def_de_tipo
rule 8    declaracao -> decl_de_proc
rule 9    decl_de_var -> tipo DOUBLEDOTS lista_de_ids
rule 10   tipo -> INTEGER
rule 11   tipo -> BOOLEAN
rule 12   tipo -> CHAR
rule 13   tipo -> tipo_definido
rule 14   M0 -> vazio
rule 15   M1 -> vazio
rule 16   M2 -> vazio
rule 17   def_de_tipo -> TYPE nome_do_tipo M0 EQ M1 definicao_de_tipo
rule 18   nome_do_tipo -> identificador
rule 19   definicao_de_tipo -> OPENPAR limites CLOSEPAR tipo
rule 20   limites -> inteiro DOUBLEDOTS inteiro
rule 21   tipo_definido -> identificador
rule 22   decl_de_proc -> proc_cab pro_corpo
rule 23   proc_cab -> tipo_retornado PROCEDURE M0 nome_do_proc espec_de_parametros
rule 24   pro_corpo -> DOUBLEDOTS declaracoes M0 bloco emit_return
rule 25   pro_corpo -> emit_return
rule 26   emit_return -> vazio
rule 27   lista_de_parametros -> parametro
rule 28   lista_de_parametros -> lista_de_parametros COLON parametro
rule 29   tipo_retornado -> INTEGER
rule 30   tipo_retornado -> BOOLEAN
rule 31   tipo_retornado -> CHAR
rule 32   tipo_retornado -> vazio
rule 33   parametro -> modo tipo DOUBLEDOTS identificador
rule 34   modo -> VALUE
rule 35   modo -> REFERENCE
rule 36   nome_do_proc -> identificador
rule 37   lista_de_comandos -> comando
rule 38   lista_de_comandos -> lista_de_comandos SEMICOLON M0 comando
rule 39   lista_de_ids -> identificador
rule 40   lista_de_ids -> lista_de_ids COLON identificador
rule 41   vazio ->		/* empty */
rule 42   espec_de_parametros -> OPENPAR lista_de_parametros CLOSEPAR
rule 43   espec_de_parametros -> vazio
rule 44   comando -> comando_de_atribuicao
rule 45   comando -> comando_while
rule 46   comando -> comando_repeat
rule 47   comando -> comando_if
rule 48   comando -> comando_read
rule 49   comando -> comando_write
rule 50   comando -> comando_return
rule 51   comando -> comando_exit
rule 52   comando -> chamada_de_procedimento
rule 53   comando -> rotulo DOUBLEDOTS comando
rule 54   comando_de_atribuicao -> variavel ATTRIB expr
rule 55   comando_while -> WHILE M0 expr DO M0 lista_de_comandos ENDWHILE
rule 56   comando_repeat -> REPEAT M0 lista_de_comandos UNTIL M0 expr
rule 57   comando_if -> IF expr THEN M0 lista_de_comandos ENDIF
rule 58   comando_if -> IF expr THEN M0 lista_de_comandos M1 ELSE M0 lista_de_comandos ENDIF
rule 59   comando_read -> READ variavel
rule 60   comando_write -> WRITE expr
rule 61   comando_return -> RETURN expr
rule 62   comando_exit -> EXIT identificador
rule 63   rotulo -> identificador
rule 64   variavel -> identificador
rule 65   variavel -> chamada_ou_indexacao
rule 66   chamada_ou_indexacao -> indices CLOSEPAR
rule 67   chamada_de_procedimento -> identificador
rule 68   chamada_de_procedimento -> chamada_ou_indexacao
rule 69   indices -> variavel2 OPENPAR expr
rule 70   indices -> indices COLON expr
rule 71   variavel2 -> identificador
rule 72   expr -> expr OR M0 expr
rule 73   expr -> expr AND M0 expr
rule 74   expr -> NOT expr
rule 75   expr -> expr NE expr
rule 76   expr -> expr LT expr
rule 77   expr -> expr GT expr
rule 78   expr -> expr GE expr
rule 79   expr -> expr LE expr
rule 80   expr -> expr PLUS expr
rule 81   expr -> expr MINUS expr
rule 82   expr -> expr MULT expr
rule 83   expr -> expr DIV expr
rule 84   expr -> expr EXP expr
rule 85   expr -> MINUS expr
rule 86   expr -> variavel
rule 87   expr -> constante
rule 88   expr -> OPENPAR expr CLOSEPAR
rule 89   constante -> int_ou_char
rule 90   constante -> booleano
rule 91   int_ou_char -> inteiro
rule 92   int_ou_char -> CONST_CHAR
rule 93   inteiro -> NUM
rule 94   booleano -> TRUE
rule 95   booleano -> FALSE
rule 96   identificador -> IDENTIFIER

Terminals, with rules where they appear

$ (-1)
'*' (42)
'+' (43)
'-' (45)
'/' (47)
'=' (61)
error (256)
NUM (258) 93
IDENTIFIER (259) 96
BEG (260) 3
BOOLEAN (261) 11 30
CONST_CHAR (262) 92
CHAR (263) 12 31
DO (264) 55
END (265) 3
FALSE (266) 95
ENDIF (267) 57 58
ENDWHILE (268) 55
EXIT (269) 62
INTEGER (270) 10 29
PROCEDURE (271) 23
PROGRAM (272) 2
REFERENCE (273) 35
REPEAT (274) 56
READ (275) 59
RETURN (276) 61
THEN (277) 57 58
TRUE (278) 94
TYPE (279) 17
VALUE (280) 34
UNTIL (281) 56
WRITE (282) 60
WHILE (283) 55
ATTRIB (284) 54
DOUBLEDOTS (285) 9 20 24 33 53
COLON (286) 28 40 70
SEMICOLON (287) 4 38
OPENPAR (288) 19 42 69 88
CLOSEPAR (289) 19 42 66 88
OR (290) 72
AND (291) 73
LE (292) 79
GT (293) 77
EQ (294) 17
LT (295) 76
GE (296) 78
NE (297) 75
NOT (298) 74
PLUS (299) 80
MINUS (300) 81 85
MULT (301) 82
DIV (302) 83
EXP (303) 84
UMINUS (304)
IF (305) 57 58
ELSE (306) 58

Nonterminals, with rules where they appear

CODE (57)
    on left: 1
program (58)
    on left: 2, on right: 1
bloco (59)
    on left: 3, on right: 2 24
declaracoes (60)
    on left: 4 5, on right: 2 4 24
declaracao (61)
    on left: 6 7 8, on right: 4
decl_de_var (62)
    on left: 9, on right: 6
tipo (63)
    on left: 10 11 12 13, on right: 9 19 33
M0 (64)
    on left: 14, on right: 2 3 4 17 23 24 38 55 56 57 58 72 73
M1 (65)
    on left: 15, on right: 17 58
M2 (66)
    on left: 16, on right: 2
def_de_tipo (67)
    on left: 17, on right: 7
nome_do_tipo (68)
    on left: 18, on right: 17
definicao_de_tipo (69)
    on left: 19, on right: 17
limites (70)
    on left: 20, on right: 19
tipo_definido (71)
    on left: 21, on right: 13
decl_de_proc (72)
    on left: 22, on right: 8
proc_cab (73)
    on left: 23, on right: 22
pro_corpo (74)
    on left: 24 25, on right: 22
emit_return (75)
    on left: 26, on right: 24 25
lista_de_parametros (76)
    on left: 27 28, on right: 28 42
tipo_retornado (77)
    on left: 29 30 31 32, on right: 23
parametro (78)
    on left: 33, on right: 27 28
modo (79)
    on left: 34 35, on right: 33
nome_do_proc (80)
    on left: 36, on right: 23
lista_de_comandos (81)
    on left: 37 38, on right: 3 38 55 56 57 58
lista_de_ids (82)
    on left: 39 40, on right: 9 40
vazio (83)
    on left: 41, on right: 5 14 15 16 26 32 43
espec_de_parametros (84)
    on left: 42 43, on right: 23
comando (85)
    on left: 44 45 46 47 48 49 50 51 52 53, on right: 37 38 53
comando_de_atribuicao (86)
    on left: 54, on right: 44
comando_while (87)
    on left: 55, on right: 45
comando_repeat (88)
    on left: 56, on right: 46
comando_if (89)
    on left: 57 58, on right: 47
comando_read (90)
    on left: 59, on right: 48
comando_write (91)
    on left: 60, on right: 49
comando_return (92)
    on left: 61, on right: 50
comando_exit (93)
    on left: 62, on right: 51
rotulo (94)
    on left: 63, on right: 53
variavel (95)
    on left: 64 65, on right: 54 59 86
chamada_ou_indexacao (96)
    on left: 66, on right: 65 68
chamada_de_procedimento (97)
    on left: 67 68, on right: 52
indices (98)
    on left: 69 70, on right: 66 70
variavel2 (99)
    on left: 71, on right: 69
expr (100)
    on left: 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88,
    on right: 54 55 56 57 58 60 61 69 70 72 73 74 75 76 77 78 79 80
    81 82 83 84 85 88
constante (101)
    on left: 89 90, on right: 87
int_ou_char (102)
    on left: 91 92, on right: 89
inteiro (103)
    on left: 93, on right: 20 91
booleano (104)
    on left: 94 95, on right: 90
identificador (105)
    on left: 96, on right: 18 21 33 36 39 40 62 63 64 67 71


state 0

    PROGRAM	shift, and go to state 1

    CODE	go to state 182
    program	go to state 2



state 1

    program  ->  PROGRAM . M2 declaracoes M0 bloco   (rule 2)

    $default	reduce using rule 41 (vazio)

    M2  	go to state 3
    vazio	go to state 4



state 2

    CODE  ->  program .   (rule 1)

    $default	reduce using rule 1 (CODE)



state 3

    program  ->  PROGRAM M2 . declaracoes M0 bloco   (rule 2)

    $default	reduce using rule 41 (vazio)

    declaracoes	go to state 5
    vazio	go to state 6



state 4

    M2  ->  vazio .   (rule 16)

    $default	reduce using rule 16 (M2)



state 5

    program  ->  PROGRAM M2 declaracoes . M0 bloco   (rule 2)
    declaracoes  ->  declaracoes . M0 declaracao SEMICOLON   (rule 4)

    $default	reduce using rule 41 (vazio)

    M0  	go to state 7
    vazio	go to state 8



state 6

    declaracoes  ->  vazio .   (rule 5)

    $default	reduce using rule 5 (declaracoes)



state 7

    program  ->  PROGRAM M2 declaracoes M0 . bloco   (rule 2)
    declaracoes  ->  declaracoes M0 . declaracao SEMICOLON   (rule 4)

    IDENTIFIER	shift, and go to state 9
    BEG 	shift, and go to state 10
    BOOLEAN	shift, and go to state 11
    CHAR	shift, and go to state 12
    INTEGER	shift, and go to state 13
    TYPE	shift, and go to state 14

    $default	reduce using rule 41 (vazio)

    bloco	go to state 15
    declaracao	go to state 16
    decl_de_var	go to state 17
    tipo	go to state 18
    def_de_tipo	go to state 19
    tipo_definido	go to state 20
    decl_de_proc	go to state 21
    proc_cab	go to state 22
    tipo_retornado	go to state 23
    vazio	go to state 24
    identificador	go to state 25



state 8

    M0  ->  vazio .   (rule 14)

    $default	reduce using rule 14 (M0)



state 9

    identificador  ->  IDENTIFIER .   (rule 96)

    $default	reduce using rule 96 (identificador)



state 10

    bloco  ->  BEG . lista_de_comandos M0 END   (rule 3)

    IDENTIFIER	shift, and go to state 9
    EXIT	shift, and go to state 26
    REPEAT	shift, and go to state 27
    READ	shift, and go to state 28
    RETURN	shift, and go to state 29
    WRITE	shift, and go to state 30
    WHILE	shift, and go to state 31
    IF  	shift, and go to state 32

    lista_de_comandos	go to state 33
    comando	go to state 34
    comando_de_atribuicao	go to state 35
    comando_while	go to state 36
    comando_repeat	go to state 37
    comando_if	go to state 38
    comando_read	go to state 39
    comando_write	go to state 40
    comando_return	go to state 41
    comando_exit	go to state 42
    rotulo	go to state 43
    variavel	go to state 44
    chamada_ou_indexacao	go to state 45
    chamada_de_procedimento	go to state 46
    indices	go to state 47
    variavel2	go to state 48
    identificador	go to state 49



state 11

    tipo  ->  BOOLEAN .   (rule 11)
    tipo_retornado  ->  BOOLEAN .   (rule 30)

    PROCEDURE	reduce using rule 30 (tipo_retornado)
    EXP 	reduce using rule 30 (tipo_retornado)
    $default	reduce using rule 11 (tipo)



state 12

    tipo  ->  CHAR .   (rule 12)
    tipo_retornado  ->  CHAR .   (rule 31)

    PROCEDURE	reduce using rule 31 (tipo_retornado)
    EXP 	reduce using rule 31 (tipo_retornado)
    $default	reduce using rule 12 (tipo)



state 13

    tipo  ->  INTEGER .   (rule 10)
    tipo_retornado  ->  INTEGER .   (rule 29)

    PROCEDURE	reduce using rule 29 (tipo_retornado)
    EXP 	reduce using rule 29 (tipo_retornado)
    $default	reduce using rule 10 (tipo)



state 14

    def_de_tipo  ->  TYPE . nome_do_tipo M0 EQ M1 definicao_de_tipo   (rule 17)

    IDENTIFIER	shift, and go to state 9

    nome_do_tipo	go to state 50
    identificador	go to state 51



state 15

    program  ->  PROGRAM M2 declaracoes M0 bloco .   (rule 2)

    $default	reduce using rule 2 (program)



state 16

    declaracoes  ->  declaracoes M0 declaracao . SEMICOLON   (rule 4)

    SEMICOLON	shift, and go to state 52



state 17

    declaracao  ->  decl_de_var .   (rule 6)

    $default	reduce using rule 6 (declaracao)



state 18

    decl_de_var  ->  tipo . DOUBLEDOTS lista_de_ids   (rule 9)

    DOUBLEDOTS	shift, and go to state 53



state 19

    declaracao  ->  def_de_tipo .   (rule 7)

    $default	reduce using rule 7 (declaracao)



state 20

    tipo  ->  tipo_definido .   (rule 13)

    $default	reduce using rule 13 (tipo)



state 21

    declaracao  ->  decl_de_proc .   (rule 8)

    $default	reduce using rule 8 (declaracao)



state 22

    decl_de_proc  ->  proc_cab . pro_corpo   (rule 22)

    DOUBLEDOTS	shift, and go to state 54

    $default	reduce using rule 41 (vazio)

    pro_corpo	go to state 55
    emit_return	go to state 56
    vazio	go to state 57



state 23

    proc_cab  ->  tipo_retornado . PROCEDURE M0 nome_do_proc espec_de_parametros   (rule 23)

    PROCEDURE	shift, and go to state 58



state 24

    tipo_retornado  ->  vazio .   (rule 32)

    $default	reduce using rule 32 (tipo_retornado)



state 25

    tipo_definido  ->  identificador .   (rule 21)

    $default	reduce using rule 21 (tipo_definido)



state 26

    comando_exit  ->  EXIT . identificador   (rule 62)

    IDENTIFIER	shift, and go to state 9

    identificador	go to state 59



state 27

    comando_repeat  ->  REPEAT . M0 lista_de_comandos UNTIL M0 expr   (rule 56)

    $default	reduce using rule 41 (vazio)

    M0  	go to state 60
    vazio	go to state 8



state 28

    comando_read  ->  READ . variavel   (rule 59)

    IDENTIFIER	shift, and go to state 9

    variavel	go to state 61
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    identificador	go to state 63



state 29

    comando_return  ->  RETURN . expr   (rule 61)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 72
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 30

    comando_write  ->  WRITE . expr   (rule 60)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 77
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 31

    comando_while  ->  WHILE . M0 expr DO M0 lista_de_comandos ENDWHILE   (rule 55)

    $default	reduce using rule 41 (vazio)

    M0  	go to state 78
    vazio	go to state 8



state 32

    comando_if  ->  IF . expr THEN M0 lista_de_comandos ENDIF   (rule 57)
    comando_if  ->  IF . expr THEN M0 lista_de_comandos M1 ELSE M0 lista_de_comandos ENDIF   (rule 58)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 79
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 33

    bloco  ->  BEG lista_de_comandos . M0 END   (rule 3)
    lista_de_comandos  ->  lista_de_comandos . SEMICOLON M0 comando   (rule 38)

    SEMICOLON	shift, and go to state 80

    $default	reduce using rule 41 (vazio)

    M0  	go to state 81
    vazio	go to state 8



state 34

    lista_de_comandos  ->  comando .   (rule 37)

    $default	reduce using rule 37 (lista_de_comandos)



state 35

    comando  ->  comando_de_atribuicao .   (rule 44)

    $default	reduce using rule 44 (comando)



state 36

    comando  ->  comando_while .   (rule 45)

    $default	reduce using rule 45 (comando)



state 37

    comando  ->  comando_repeat .   (rule 46)

    $default	reduce using rule 46 (comando)



state 38

    comando  ->  comando_if .   (rule 47)

    $default	reduce using rule 47 (comando)



state 39

    comando  ->  comando_read .   (rule 48)

    $default	reduce using rule 48 (comando)



state 40

    comando  ->  comando_write .   (rule 49)

    $default	reduce using rule 49 (comando)



state 41

    comando  ->  comando_return .   (rule 50)

    $default	reduce using rule 50 (comando)



state 42

    comando  ->  comando_exit .   (rule 51)

    $default	reduce using rule 51 (comando)



state 43

    comando  ->  rotulo . DOUBLEDOTS comando   (rule 53)

    DOUBLEDOTS	shift, and go to state 82



state 44

    comando_de_atribuicao  ->  variavel . ATTRIB expr   (rule 54)

    ATTRIB	shift, and go to state 83



state 45

    variavel  ->  chamada_ou_indexacao .   (rule 65)
    chamada_de_procedimento  ->  chamada_ou_indexacao .   (rule 68)

    ATTRIB	reduce using rule 65 (variavel)
    $default	reduce using rule 68 (chamada_de_procedimento)



state 46

    comando  ->  chamada_de_procedimento .   (rule 52)

    $default	reduce using rule 52 (comando)



state 47

    chamada_ou_indexacao  ->  indices . CLOSEPAR   (rule 66)
    indices  ->  indices . COLON expr   (rule 70)

    COLON	shift, and go to state 84
    CLOSEPAR	shift, and go to state 85



state 48

    indices  ->  variavel2 . OPENPAR expr   (rule 69)

    OPENPAR	shift, and go to state 86



state 49

    rotulo  ->  identificador .   (rule 63)
    variavel  ->  identificador .   (rule 64)
    chamada_de_procedimento  ->  identificador .   (rule 67)
    variavel2  ->  identificador .   (rule 71)

    ATTRIB	reduce using rule 64 (variavel)
    DOUBLEDOTS	reduce using rule 63 (rotulo)
    $default	reduce using rule 67 (chamada_de_procedimento)



state 50

    def_de_tipo  ->  TYPE nome_do_tipo . M0 EQ M1 definicao_de_tipo   (rule 17)

    $default	reduce using rule 41 (vazio)

    M0  	go to state 87
    vazio	go to state 8



state 51

    nome_do_tipo  ->  identificador .   (rule 18)

    $default	reduce using rule 18 (nome_do_tipo)



state 52

    declaracoes  ->  declaracoes M0 declaracao SEMICOLON .   (rule 4)

    $default	reduce using rule 4 (declaracoes)



state 53

    decl_de_var  ->  tipo DOUBLEDOTS . lista_de_ids   (rule 9)

    IDENTIFIER	shift, and go to state 9

    lista_de_ids	go to state 88
    identificador	go to state 89



state 54

    pro_corpo  ->  DOUBLEDOTS . declaracoes M0 bloco emit_return   (rule 24)

    $default	reduce using rule 41 (vazio)

    declaracoes	go to state 90
    vazio	go to state 6



state 55

    decl_de_proc  ->  proc_cab pro_corpo .   (rule 22)

    $default	reduce using rule 22 (decl_de_proc)



state 56

    pro_corpo  ->  emit_return .   (rule 25)

    $default	reduce using rule 25 (pro_corpo)



state 57

    emit_return  ->  vazio .   (rule 26)

    $default	reduce using rule 26 (emit_return)



state 58

    proc_cab  ->  tipo_retornado PROCEDURE . M0 nome_do_proc espec_de_parametros   (rule 23)

    $default	reduce using rule 41 (vazio)

    M0  	go to state 91
    vazio	go to state 8



state 59

    comando_exit  ->  EXIT identificador .   (rule 62)

    $default	reduce using rule 62 (comando_exit)



state 60

    comando_repeat  ->  REPEAT M0 . lista_de_comandos UNTIL M0 expr   (rule 56)

    IDENTIFIER	shift, and go to state 9
    EXIT	shift, and go to state 26
    REPEAT	shift, and go to state 27
    READ	shift, and go to state 28
    RETURN	shift, and go to state 29
    WRITE	shift, and go to state 30
    WHILE	shift, and go to state 31
    IF  	shift, and go to state 32

    lista_de_comandos	go to state 92
    comando	go to state 34
    comando_de_atribuicao	go to state 35
    comando_while	go to state 36
    comando_repeat	go to state 37
    comando_if	go to state 38
    comando_read	go to state 39
    comando_write	go to state 40
    comando_return	go to state 41
    comando_exit	go to state 42
    rotulo	go to state 43
    variavel	go to state 44
    chamada_ou_indexacao	go to state 45
    chamada_de_procedimento	go to state 46
    indices	go to state 47
    variavel2	go to state 48
    identificador	go to state 49



state 61

    comando_read  ->  READ variavel .   (rule 59)

    $default	reduce using rule 59 (comando_read)



state 62

    variavel  ->  chamada_ou_indexacao .   (rule 65)

    $default	reduce using rule 65 (variavel)



state 63

    variavel  ->  identificador .   (rule 64)
    variavel2  ->  identificador .   (rule 71)

    $default	reduce using rule 64 (variavel)



state 64

    inteiro  ->  NUM .   (rule 93)

    $default	reduce using rule 93 (inteiro)



state 65

    int_ou_char  ->  CONST_CHAR .   (rule 92)

    $default	reduce using rule 92 (int_ou_char)



state 66

    booleano  ->  FALSE .   (rule 95)

    $default	reduce using rule 95 (booleano)



state 67

    booleano  ->  TRUE .   (rule 94)

    $default	reduce using rule 94 (booleano)



state 68

    expr  ->  OPENPAR . expr CLOSEPAR   (rule 88)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 93
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 69

    expr  ->  NOT . expr   (rule 74)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 94
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 70

    expr  ->  MINUS . expr   (rule 85)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 95
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 71

    expr  ->  variavel .   (rule 86)

    $default	reduce using rule 86 (expr)



state 72

    comando_return  ->  RETURN expr .   (rule 61)
    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    OR  	shift, and go to state 96
    AND 	shift, and go to state 97
    LE  	shift, and go to state 98
    GT  	shift, and go to state 99
    LT  	shift, and go to state 100
    GE  	shift, and go to state 101
    NE  	shift, and go to state 102
    PLUS	shift, and go to state 103
    MINUS	shift, and go to state 104
    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107

    $default	reduce using rule 61 (comando_return)



state 73

    expr  ->  constante .   (rule 87)

    $default	reduce using rule 87 (expr)



state 74

    constante  ->  int_ou_char .   (rule 89)

    $default	reduce using rule 89 (constante)



state 75

    int_ou_char  ->  inteiro .   (rule 91)

    $default	reduce using rule 91 (int_ou_char)



state 76

    constante  ->  booleano .   (rule 90)

    $default	reduce using rule 90 (constante)



state 77

    comando_write  ->  WRITE expr .   (rule 60)
    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    OR  	shift, and go to state 96
    AND 	shift, and go to state 97
    LE  	shift, and go to state 98
    GT  	shift, and go to state 99
    LT  	shift, and go to state 100
    GE  	shift, and go to state 101
    NE  	shift, and go to state 102
    PLUS	shift, and go to state 103
    MINUS	shift, and go to state 104
    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107

    $default	reduce using rule 60 (comando_write)



state 78

    comando_while  ->  WHILE M0 . expr DO M0 lista_de_comandos ENDWHILE   (rule 55)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 108
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 79

    comando_if  ->  IF expr . THEN M0 lista_de_comandos ENDIF   (rule 57)
    comando_if  ->  IF expr . THEN M0 lista_de_comandos M1 ELSE M0 lista_de_comandos ENDIF   (rule 58)
    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    THEN	shift, and go to state 109
    OR  	shift, and go to state 96
    AND 	shift, and go to state 97
    LE  	shift, and go to state 98
    GT  	shift, and go to state 99
    LT  	shift, and go to state 100
    GE  	shift, and go to state 101
    NE  	shift, and go to state 102
    PLUS	shift, and go to state 103
    MINUS	shift, and go to state 104
    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107



state 80

    lista_de_comandos  ->  lista_de_comandos SEMICOLON . M0 comando   (rule 38)

    $default	reduce using rule 41 (vazio)

    M0  	go to state 110
    vazio	go to state 8



state 81

    bloco  ->  BEG lista_de_comandos M0 . END   (rule 3)

    END 	shift, and go to state 111



state 82

    comando  ->  rotulo DOUBLEDOTS . comando   (rule 53)

    IDENTIFIER	shift, and go to state 9
    EXIT	shift, and go to state 26
    REPEAT	shift, and go to state 27
    READ	shift, and go to state 28
    RETURN	shift, and go to state 29
    WRITE	shift, and go to state 30
    WHILE	shift, and go to state 31
    IF  	shift, and go to state 32

    comando	go to state 112
    comando_de_atribuicao	go to state 35
    comando_while	go to state 36
    comando_repeat	go to state 37
    comando_if	go to state 38
    comando_read	go to state 39
    comando_write	go to state 40
    comando_return	go to state 41
    comando_exit	go to state 42
    rotulo	go to state 43
    variavel	go to state 44
    chamada_ou_indexacao	go to state 45
    chamada_de_procedimento	go to state 46
    indices	go to state 47
    variavel2	go to state 48
    identificador	go to state 49



state 83

    comando_de_atribuicao  ->  variavel ATTRIB . expr   (rule 54)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 113
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 84

    indices  ->  indices COLON . expr   (rule 70)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 114
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 85

    chamada_ou_indexacao  ->  indices CLOSEPAR .   (rule 66)

    $default	reduce using rule 66 (chamada_ou_indexacao)



state 86

    indices  ->  variavel2 OPENPAR . expr   (rule 69)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 115
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 87

    def_de_tipo  ->  TYPE nome_do_tipo M0 . EQ M1 definicao_de_tipo   (rule 17)

    EQ  	shift, and go to state 116



state 88

    decl_de_var  ->  tipo DOUBLEDOTS lista_de_ids .   (rule 9)
    lista_de_ids  ->  lista_de_ids . COLON identificador   (rule 40)

    COLON	shift, and go to state 117

    $default	reduce using rule 9 (decl_de_var)



state 89

    lista_de_ids  ->  identificador .   (rule 39)

    $default	reduce using rule 39 (lista_de_ids)



state 90

    declaracoes  ->  declaracoes . M0 declaracao SEMICOLON   (rule 4)
    pro_corpo  ->  DOUBLEDOTS declaracoes . M0 bloco emit_return   (rule 24)

    $default	reduce using rule 41 (vazio)

    M0  	go to state 118
    vazio	go to state 8



state 91

    proc_cab  ->  tipo_retornado PROCEDURE M0 . nome_do_proc espec_de_parametros   (rule 23)

    IDENTIFIER	shift, and go to state 9

    nome_do_proc	go to state 119
    identificador	go to state 120



state 92

    lista_de_comandos  ->  lista_de_comandos . SEMICOLON M0 comando   (rule 38)
    comando_repeat  ->  REPEAT M0 lista_de_comandos . UNTIL M0 expr   (rule 56)

    UNTIL	shift, and go to state 121
    SEMICOLON	shift, and go to state 80



state 93

    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)
    expr  ->  OPENPAR expr . CLOSEPAR   (rule 88)

    CLOSEPAR	shift, and go to state 122
    OR  	shift, and go to state 96
    AND 	shift, and go to state 97
    LE  	shift, and go to state 98
    GT  	shift, and go to state 99
    LT  	shift, and go to state 100
    GE  	shift, and go to state 101
    NE  	shift, and go to state 102
    PLUS	shift, and go to state 103
    MINUS	shift, and go to state 104
    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107



state 94

    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  NOT expr .   (rule 74)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    PLUS	shift, and go to state 103
    MINUS	shift, and go to state 104
    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107

    $default	reduce using rule 74 (expr)



state 95

    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)
    expr  ->  MINUS expr .   (rule 85)


    $default	reduce using rule 85 (expr)



state 96

    expr  ->  expr OR . M0 expr   (rule 72)

    $default	reduce using rule 41 (vazio)

    M0  	go to state 123
    vazio	go to state 8



state 97

    expr  ->  expr AND . M0 expr   (rule 73)

    $default	reduce using rule 41 (vazio)

    M0  	go to state 124
    vazio	go to state 8



state 98

    expr  ->  expr LE . expr   (rule 79)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 125
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 99

    expr  ->  expr GT . expr   (rule 77)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 126
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 100

    expr  ->  expr LT . expr   (rule 76)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 127
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 101

    expr  ->  expr GE . expr   (rule 78)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 128
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 102

    expr  ->  expr NE . expr   (rule 75)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 129
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 103

    expr  ->  expr PLUS . expr   (rule 80)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 130
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 104

    expr  ->  expr MINUS . expr   (rule 81)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 131
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 105

    expr  ->  expr MULT . expr   (rule 82)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 132
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 106

    expr  ->  expr DIV . expr   (rule 83)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 133
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 107

    expr  ->  expr EXP . expr   (rule 84)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 134
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 108

    comando_while  ->  WHILE M0 expr . DO M0 lista_de_comandos ENDWHILE   (rule 55)
    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    DO  	shift, and go to state 135
    OR  	shift, and go to state 96
    AND 	shift, and go to state 97
    LE  	shift, and go to state 98
    GT  	shift, and go to state 99
    LT  	shift, and go to state 100
    GE  	shift, and go to state 101
    NE  	shift, and go to state 102
    PLUS	shift, and go to state 103
    MINUS	shift, and go to state 104
    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107



state 109

    comando_if  ->  IF expr THEN . M0 lista_de_comandos ENDIF   (rule 57)
    comando_if  ->  IF expr THEN . M0 lista_de_comandos M1 ELSE M0 lista_de_comandos ENDIF   (rule 58)

    $default	reduce using rule 41 (vazio)

    M0  	go to state 136
    vazio	go to state 8



state 110

    lista_de_comandos  ->  lista_de_comandos SEMICOLON M0 . comando   (rule 38)

    IDENTIFIER	shift, and go to state 9
    EXIT	shift, and go to state 26
    REPEAT	shift, and go to state 27
    READ	shift, and go to state 28
    RETURN	shift, and go to state 29
    WRITE	shift, and go to state 30
    WHILE	shift, and go to state 31
    IF  	shift, and go to state 32

    comando	go to state 137
    comando_de_atribuicao	go to state 35
    comando_while	go to state 36
    comando_repeat	go to state 37
    comando_if	go to state 38
    comando_read	go to state 39
    comando_write	go to state 40
    comando_return	go to state 41
    comando_exit	go to state 42
    rotulo	go to state 43
    variavel	go to state 44
    chamada_ou_indexacao	go to state 45
    chamada_de_procedimento	go to state 46
    indices	go to state 47
    variavel2	go to state 48
    identificador	go to state 49



state 111

    bloco  ->  BEG lista_de_comandos M0 END .   (rule 3)

    $default	reduce using rule 3 (bloco)



state 112

    comando  ->  rotulo DOUBLEDOTS comando .   (rule 53)

    $default	reduce using rule 53 (comando)



state 113

    comando_de_atribuicao  ->  variavel ATTRIB expr .   (rule 54)
    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    OR  	shift, and go to state 96
    AND 	shift, and go to state 97
    LE  	shift, and go to state 98
    GT  	shift, and go to state 99
    LT  	shift, and go to state 100
    GE  	shift, and go to state 101
    NE  	shift, and go to state 102
    PLUS	shift, and go to state 103
    MINUS	shift, and go to state 104
    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107

    $default	reduce using rule 54 (comando_de_atribuicao)



state 114

    indices  ->  indices COLON expr .   (rule 70)
    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    OR  	shift, and go to state 96
    AND 	shift, and go to state 97
    LE  	shift, and go to state 98
    GT  	shift, and go to state 99
    LT  	shift, and go to state 100
    GE  	shift, and go to state 101
    NE  	shift, and go to state 102
    PLUS	shift, and go to state 103
    MINUS	shift, and go to state 104
    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107

    $default	reduce using rule 70 (indices)



state 115

    indices  ->  variavel2 OPENPAR expr .   (rule 69)
    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    OR  	shift, and go to state 96
    AND 	shift, and go to state 97
    LE  	shift, and go to state 98
    GT  	shift, and go to state 99
    LT  	shift, and go to state 100
    GE  	shift, and go to state 101
    NE  	shift, and go to state 102
    PLUS	shift, and go to state 103
    MINUS	shift, and go to state 104
    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107

    $default	reduce using rule 69 (indices)



state 116

    def_de_tipo  ->  TYPE nome_do_tipo M0 EQ . M1 definicao_de_tipo   (rule 17)

    $default	reduce using rule 41 (vazio)

    M1  	go to state 138
    vazio	go to state 139



state 117

    lista_de_ids  ->  lista_de_ids COLON . identificador   (rule 40)

    IDENTIFIER	shift, and go to state 9

    identificador	go to state 140



state 118

    declaracoes  ->  declaracoes M0 . declaracao SEMICOLON   (rule 4)
    pro_corpo  ->  DOUBLEDOTS declaracoes M0 . bloco emit_return   (rule 24)

    IDENTIFIER	shift, and go to state 9
    BEG 	shift, and go to state 10
    BOOLEAN	shift, and go to state 11
    CHAR	shift, and go to state 12
    INTEGER	shift, and go to state 13
    TYPE	shift, and go to state 14

    $default	reduce using rule 41 (vazio)

    bloco	go to state 141
    declaracao	go to state 16
    decl_de_var	go to state 17
    tipo	go to state 18
    def_de_tipo	go to state 19
    tipo_definido	go to state 20
    decl_de_proc	go to state 21
    proc_cab	go to state 22
    tipo_retornado	go to state 23
    vazio	go to state 24
    identificador	go to state 25



state 119

    proc_cab  ->  tipo_retornado PROCEDURE M0 nome_do_proc . espec_de_parametros   (rule 23)

    OPENPAR	shift, and go to state 142

    $default	reduce using rule 41 (vazio)

    vazio	go to state 143
    espec_de_parametros	go to state 144



state 120

    nome_do_proc  ->  identificador .   (rule 36)

    $default	reduce using rule 36 (nome_do_proc)



state 121

    comando_repeat  ->  REPEAT M0 lista_de_comandos UNTIL . M0 expr   (rule 56)

    $default	reduce using rule 41 (vazio)

    M0  	go to state 145
    vazio	go to state 8



state 122

    expr  ->  OPENPAR expr CLOSEPAR .   (rule 88)

    $default	reduce using rule 88 (expr)



state 123

    expr  ->  expr OR M0 . expr   (rule 72)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 146
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 124

    expr  ->  expr AND M0 . expr   (rule 73)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 147
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 125

    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr LE expr .   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    GT  	shift, and go to state 99
    LT  	shift, and go to state 100
    GE  	shift, and go to state 101
    NE  	shift, and go to state 102
    PLUS	shift, and go to state 103
    MINUS	shift, and go to state 104
    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107

    $default	reduce using rule 79 (expr)



state 126

    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr GT expr .   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    LT  	shift, and go to state 100
    GE  	shift, and go to state 101
    NE  	shift, and go to state 102
    PLUS	shift, and go to state 103
    MINUS	shift, and go to state 104
    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107

    $default	reduce using rule 77 (expr)



state 127

    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr LT expr .   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    GE  	shift, and go to state 101
    NE  	shift, and go to state 102
    PLUS	shift, and go to state 103
    MINUS	shift, and go to state 104
    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107

    $default	reduce using rule 76 (expr)



state 128

    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr GE expr .   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    NE  	shift, and go to state 102
    PLUS	shift, and go to state 103
    MINUS	shift, and go to state 104
    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107

    $default	reduce using rule 78 (expr)



state 129

    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr NE expr .   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    PLUS	shift, and go to state 103
    MINUS	shift, and go to state 104
    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107

    $default	reduce using rule 75 (expr)



state 130

    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr PLUS expr .   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    MINUS	shift, and go to state 104
    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107

    $default	reduce using rule 80 (expr)



state 131

    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr MINUS expr .   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107

    $default	reduce using rule 81 (expr)



state 132

    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr MULT expr .   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107

    $default	reduce using rule 82 (expr)



state 133

    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr DIV expr .   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    EXP 	shift, and go to state 107

    $default	reduce using rule 83 (expr)



state 134

    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)
    expr  ->  expr EXP expr .   (rule 84)

    EXP 	shift, and go to state 107

    $default	reduce using rule 84 (expr)



state 135

    comando_while  ->  WHILE M0 expr DO . M0 lista_de_comandos ENDWHILE   (rule 55)

    $default	reduce using rule 41 (vazio)

    M0  	go to state 148
    vazio	go to state 8



state 136

    comando_if  ->  IF expr THEN M0 . lista_de_comandos ENDIF   (rule 57)
    comando_if  ->  IF expr THEN M0 . lista_de_comandos M1 ELSE M0 lista_de_comandos ENDIF   (rule 58)

    IDENTIFIER	shift, and go to state 9
    EXIT	shift, and go to state 26
    REPEAT	shift, and go to state 27
    READ	shift, and go to state 28
    RETURN	shift, and go to state 29
    WRITE	shift, and go to state 30
    WHILE	shift, and go to state 31
    IF  	shift, and go to state 32

    lista_de_comandos	go to state 149
    comando	go to state 34
    comando_de_atribuicao	go to state 35
    comando_while	go to state 36
    comando_repeat	go to state 37
    comando_if	go to state 38
    comando_read	go to state 39
    comando_write	go to state 40
    comando_return	go to state 41
    comando_exit	go to state 42
    rotulo	go to state 43
    variavel	go to state 44
    chamada_ou_indexacao	go to state 45
    chamada_de_procedimento	go to state 46
    indices	go to state 47
    variavel2	go to state 48
    identificador	go to state 49



state 137

    lista_de_comandos  ->  lista_de_comandos SEMICOLON M0 comando .   (rule 38)

    $default	reduce using rule 38 (lista_de_comandos)



state 138

    def_de_tipo  ->  TYPE nome_do_tipo M0 EQ M1 . definicao_de_tipo   (rule 17)

    OPENPAR	shift, and go to state 150

    definicao_de_tipo	go to state 151



state 139

    M1  ->  vazio .   (rule 15)

    $default	reduce using rule 15 (M1)



state 140

    lista_de_ids  ->  lista_de_ids COLON identificador .   (rule 40)

    $default	reduce using rule 40 (lista_de_ids)



state 141

    pro_corpo  ->  DOUBLEDOTS declaracoes M0 bloco . emit_return   (rule 24)

    $default	reduce using rule 41 (vazio)

    emit_return	go to state 152
    vazio	go to state 57



state 142

    espec_de_parametros  ->  OPENPAR . lista_de_parametros CLOSEPAR   (rule 42)

    REFERENCE	shift, and go to state 153
    VALUE	shift, and go to state 154

    lista_de_parametros	go to state 155
    parametro	go to state 156
    modo	go to state 157



state 143

    espec_de_parametros  ->  vazio .   (rule 43)

    $default	reduce using rule 43 (espec_de_parametros)



state 144

    proc_cab  ->  tipo_retornado PROCEDURE M0 nome_do_proc espec_de_parametros .   (rule 23)

    $default	reduce using rule 23 (proc_cab)



state 145

    comando_repeat  ->  REPEAT M0 lista_de_comandos UNTIL M0 . expr   (rule 56)

    NUM 	shift, and go to state 64
    IDENTIFIER	shift, and go to state 9
    CONST_CHAR	shift, and go to state 65
    FALSE	shift, and go to state 66
    TRUE	shift, and go to state 67
    OPENPAR	shift, and go to state 68
    NOT 	shift, and go to state 69
    MINUS	shift, and go to state 70

    variavel	go to state 71
    chamada_ou_indexacao	go to state 62
    indices	go to state 47
    variavel2	go to state 48
    expr	go to state 158
    constante	go to state 73
    int_ou_char	go to state 74
    inteiro	go to state 75
    booleano	go to state 76
    identificador	go to state 63



state 146

    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr OR M0 expr .   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    AND 	shift, and go to state 97
    LE  	shift, and go to state 98
    GT  	shift, and go to state 99
    LT  	shift, and go to state 100
    GE  	shift, and go to state 101
    NE  	shift, and go to state 102
    PLUS	shift, and go to state 103
    MINUS	shift, and go to state 104
    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107

    $default	reduce using rule 72 (expr)



state 147

    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr AND M0 expr .   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    LE  	shift, and go to state 98
    GT  	shift, and go to state 99
    LT  	shift, and go to state 100
    GE  	shift, and go to state 101
    NE  	shift, and go to state 102
    PLUS	shift, and go to state 103
    MINUS	shift, and go to state 104
    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107

    $default	reduce using rule 73 (expr)



state 148

    comando_while  ->  WHILE M0 expr DO M0 . lista_de_comandos ENDWHILE   (rule 55)

    IDENTIFIER	shift, and go to state 9
    EXIT	shift, and go to state 26
    REPEAT	shift, and go to state 27
    READ	shift, and go to state 28
    RETURN	shift, and go to state 29
    WRITE	shift, and go to state 30
    WHILE	shift, and go to state 31
    IF  	shift, and go to state 32

    lista_de_comandos	go to state 159
    comando	go to state 34
    comando_de_atribuicao	go to state 35
    comando_while	go to state 36
    comando_repeat	go to state 37
    comando_if	go to state 38
    comando_read	go to state 39
    comando_write	go to state 40
    comando_return	go to state 41
    comando_exit	go to state 42
    rotulo	go to state 43
    variavel	go to state 44
    chamada_ou_indexacao	go to state 45
    chamada_de_procedimento	go to state 46
    indices	go to state 47
    variavel2	go to state 48
    identificador	go to state 49



state 149

    lista_de_comandos  ->  lista_de_comandos . SEMICOLON M0 comando   (rule 38)
    comando_if  ->  IF expr THEN M0 lista_de_comandos . ENDIF   (rule 57)
    comando_if  ->  IF expr THEN M0 lista_de_comandos . M1 ELSE M0 lista_de_comandos ENDIF   (rule 58)

    ENDIF	shift, and go to state 160
    SEMICOLON	shift, and go to state 80

    $default	reduce using rule 41 (vazio)

    M1  	go to state 161
    vazio	go to state 139



state 150

    definicao_de_tipo  ->  OPENPAR . limites CLOSEPAR tipo   (rule 19)

    NUM 	shift, and go to state 64

    limites	go to state 162
    inteiro	go to state 163



state 151

    def_de_tipo  ->  TYPE nome_do_tipo M0 EQ M1 definicao_de_tipo .   (rule 17)

    $default	reduce using rule 17 (def_de_tipo)



state 152

    pro_corpo  ->  DOUBLEDOTS declaracoes M0 bloco emit_return .   (rule 24)

    $default	reduce using rule 24 (pro_corpo)



state 153

    modo  ->  REFERENCE .   (rule 35)

    $default	reduce using rule 35 (modo)



state 154

    modo  ->  VALUE .   (rule 34)

    $default	reduce using rule 34 (modo)



state 155

    lista_de_parametros  ->  lista_de_parametros . COLON parametro   (rule 28)
    espec_de_parametros  ->  OPENPAR lista_de_parametros . CLOSEPAR   (rule 42)

    COLON	shift, and go to state 164
    CLOSEPAR	shift, and go to state 165



state 156

    lista_de_parametros  ->  parametro .   (rule 27)

    $default	reduce using rule 27 (lista_de_parametros)



state 157

    parametro  ->  modo . tipo DOUBLEDOTS identificador   (rule 33)

    IDENTIFIER	shift, and go to state 9
    BOOLEAN	shift, and go to state 166
    CHAR	shift, and go to state 167
    INTEGER	shift, and go to state 168

    tipo	go to state 169
    tipo_definido	go to state 20
    identificador	go to state 25



state 158

    comando_repeat  ->  REPEAT M0 lista_de_comandos UNTIL M0 expr .   (rule 56)
    expr  ->  expr . OR M0 expr   (rule 72)
    expr  ->  expr . AND M0 expr   (rule 73)
    expr  ->  expr . NE expr   (rule 75)
    expr  ->  expr . LT expr   (rule 76)
    expr  ->  expr . GT expr   (rule 77)
    expr  ->  expr . GE expr   (rule 78)
    expr  ->  expr . LE expr   (rule 79)
    expr  ->  expr . PLUS expr   (rule 80)
    expr  ->  expr . MINUS expr   (rule 81)
    expr  ->  expr . MULT expr   (rule 82)
    expr  ->  expr . DIV expr   (rule 83)
    expr  ->  expr . EXP expr   (rule 84)

    OR  	shift, and go to state 96
    AND 	shift, and go to state 97
    LE  	shift, and go to state 98
    GT  	shift, and go to state 99
    LT  	shift, and go to state 100
    GE  	shift, and go to state 101
    NE  	shift, and go to state 102
    PLUS	shift, and go to state 103
    MINUS	shift, and go to state 104
    MULT	shift, and go to state 105
    DIV 	shift, and go to state 106
    EXP 	shift, and go to state 107

    $default	reduce using rule 56 (comando_repeat)



state 159

    lista_de_comandos  ->  lista_de_comandos . SEMICOLON M0 comando   (rule 38)
    comando_while  ->  WHILE M0 expr DO M0 lista_de_comandos . ENDWHILE   (rule 55)

    ENDWHILE	shift, and go to state 170
    SEMICOLON	shift, and go to state 80



state 160

    comando_if  ->  IF expr THEN M0 lista_de_comandos ENDIF .   (rule 57)

    $default	reduce using rule 57 (comando_if)



state 161

    comando_if  ->  IF expr THEN M0 lista_de_comandos M1 . ELSE M0 lista_de_comandos ENDIF   (rule 58)

    ELSE	shift, and go to state 171



state 162

    definicao_de_tipo  ->  OPENPAR limites . CLOSEPAR tipo   (rule 19)

    CLOSEPAR	shift, and go to state 172



state 163

    limites  ->  inteiro . DOUBLEDOTS inteiro   (rule 20)

    DOUBLEDOTS	shift, and go to state 173



state 164

    lista_de_parametros  ->  lista_de_parametros COLON . parametro   (rule 28)

    REFERENCE	shift, and go to state 153
    VALUE	shift, and go to state 154

    parametro	go to state 174
    modo	go to state 157



state 165

    espec_de_parametros  ->  OPENPAR lista_de_parametros CLOSEPAR .   (rule 42)

    $default	reduce using rule 42 (espec_de_parametros)



state 166

    tipo  ->  BOOLEAN .   (rule 11)

    $default	reduce using rule 11 (tipo)



state 167

    tipo  ->  CHAR .   (rule 12)

    $default	reduce using rule 12 (tipo)



state 168

    tipo  ->  INTEGER .   (rule 10)

    $default	reduce using rule 10 (tipo)



state 169

    parametro  ->  modo tipo . DOUBLEDOTS identificador   (rule 33)

    DOUBLEDOTS	shift, and go to state 175



state 170

    comando_while  ->  WHILE M0 expr DO M0 lista_de_comandos ENDWHILE .   (rule 55)

    $default	reduce using rule 55 (comando_while)



state 171

    comando_if  ->  IF expr THEN M0 lista_de_comandos M1 ELSE . M0 lista_de_comandos ENDIF   (rule 58)

    $default	reduce using rule 41 (vazio)

    M0  	go to state 176
    vazio	go to state 8



state 172

    definicao_de_tipo  ->  OPENPAR limites CLOSEPAR . tipo   (rule 19)

    IDENTIFIER	shift, and go to state 9
    BOOLEAN	shift, and go to state 166
    CHAR	shift, and go to state 167
    INTEGER	shift, and go to state 168

    tipo	go to state 177
    tipo_definido	go to state 20
    identificador	go to state 25



state 173

    limites  ->  inteiro DOUBLEDOTS . inteiro   (rule 20)

    NUM 	shift, and go to state 64

    inteiro	go to state 178



state 174

    lista_de_parametros  ->  lista_de_parametros COLON parametro .   (rule 28)

    $default	reduce using rule 28 (lista_de_parametros)



state 175

    parametro  ->  modo tipo DOUBLEDOTS . identificador   (rule 33)

    IDENTIFIER	shift, and go to state 9

    identificador	go to state 179



state 176

    comando_if  ->  IF expr THEN M0 lista_de_comandos M1 ELSE M0 . lista_de_comandos ENDIF   (rule 58)

    IDENTIFIER	shift, and go to state 9
    EXIT	shift, and go to state 26
    REPEAT	shift, and go to state 27
    READ	shift, and go to state 28
    RETURN	shift, and go to state 29
    WRITE	shift, and go to state 30
    WHILE	shift, and go to state 31
    IF  	shift, and go to state 32

    lista_de_comandos	go to state 180
    comando	go to state 34
    comando_de_atribuicao	go to state 35
    comando_while	go to state 36
    comando_repeat	go to state 37
    comando_if	go to state 38
    comando_read	go to state 39
    comando_write	go to state 40
    comando_return	go to state 41
    comando_exit	go to state 42
    rotulo	go to state 43
    variavel	go to state 44
    chamada_ou_indexacao	go to state 45
    chamada_de_procedimento	go to state 46
    indices	go to state 47
    variavel2	go to state 48
    identificador	go to state 49



state 177

    definicao_de_tipo  ->  OPENPAR limites CLOSEPAR tipo .   (rule 19)

    $default	reduce using rule 19 (definicao_de_tipo)



state 178

    limites  ->  inteiro DOUBLEDOTS inteiro .   (rule 20)

    $default	reduce using rule 20 (limites)



state 179

    parametro  ->  modo tipo DOUBLEDOTS identificador .   (rule 33)

    $default	reduce using rule 33 (parametro)



state 180

    lista_de_comandos  ->  lista_de_comandos . SEMICOLON M0 comando   (rule 38)
    comando_if  ->  IF expr THEN M0 lista_de_comandos M1 ELSE M0 lista_de_comandos . ENDIF   (rule 58)

    ENDIF	shift, and go to state 181
    SEMICOLON	shift, and go to state 80



state 181

    comando_if  ->  IF expr THEN M0 lista_de_comandos M1 ELSE M0 lista_de_comandos ENDIF .   (rule 58)

    $default	reduce using rule 58 (comando_if)



state 182

    $   	go to state 183



state 183

    $   	go to state 184



state 184

    $default	accept
